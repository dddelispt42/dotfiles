#
# ~/.bashrc
#

stty -ixon -ixoff # turns off CTRL-S

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

PS1='[\u@\h \W]\$ '

export TERM=xterm-256color

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# path shortcuts
CDPATH=".:~:~/projects:~/bin:~/dotfiles:~/docker"

# firefox profile
FIREFOX_PROFILE="$(test -d .mozilla/firefox && (find .mozilla/firefox/ -iname '*.default' | tail -1))"

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
#[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
    xterm-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
        # We have color support; assume it's compliant with Ecma-48
        # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
        # a case would tend to support setf rather than setaf.)
        color_prompt=yes
    else
        color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\] \[\033[01;34m\]\w \$\[\033[00m\] '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    source /etc/bash_completion
fi

# PATH=~/bin:~/.cargo/bin:~/opt/neovim/bin:~/.fzf/bin:$PATH
PATH=~/bin:~/.cargo/bin:~/opt/neovim/bin:~/opt:~/.local/bin:$PATH
export PATH

export NNTPSERVER=news.aioe.org
function vimTabs() {
    vim -p $*
}
export EDITOR="vimTabs"
export VISUAL="vimTabs"
export BROWSER=elinks
export PAGER=less
export XDG_CONFIG_HOME="$HOME/.config"
export DISABLE_AUTO_TITLE=true
export AUTOSSH_LOGFILE="$HOME/autossh.log"

GREP=grep
test=`ps -ef | $GREP ssh-agent | $GREP -v grep | awk '{print $2}' | xargs`

if [ "$test" == "" ]; then
    # there is no agent running
    if [ -e "$HOME/.agent.sh" ]; then
        # remove the old file
        rm -f $HOME/.agent.sh
    fi;
    # start a new agent
    ssh-agent | $GREP -v echo >&$HOME/.agent.sh
fi;

test -e $HOME/.agent.sh && source $HOME/.agent.sh

alias kagent="kill -9 $SSH_AGENT_PID"

function keyadd() {
    ssh-add $(diff <(ssh-add -L | sed -e 's/.* //'|sort) <(ls $HOME/.ssh/*id_* | grep -v "\.pub$"|sort) | grep --color=no -E "[<>] " | sed -e "s/[<>] //" | fzf)
}
function keyremove() {
    ssh-add -d $(ssh-add -L | sed -e 's/.* //' | fzf)
}
function keynew() {
    ssh-keygen -C "$(whoami)@$(hostname)-$(date -I)"
}
alias keylist="ssh-add -L"

# TODO: generate path name
test -s ~/dotfiles/shell/alias.sh && source ~/dotfiles/shell/alias.sh || true
test -s ~/dotfiles/shell/fuzzy_functions.sh && source ~/dotfiles/shell/fuzzy_functions.sh || true
test -s ~/dotfiles/bash/z.sh && source ~/dotfiles/bash/z.sh || true
test -s ~/dotfiles/bash/fz.sh && source ~/dotfiles/bash/fz.sh || true
# TODO: test -s ~/dotfiles/bash/completion && source ~/dotfiles/bash/completion || true
test -s ~/dotfiles/bash/liquidprompt/liquidprompt && source ~/dotfiles/bash/liquidprompt/liquidprompt || true

# set term title
# echo -ne "\033]0;${USER}@${HOSTNAME}\007"

# include host specific settings
test -s ~/.bashrc.${HOSTNAME} && source ~/.bashrc.${HOSTNAME} || true

# alias tmux="TERM=xterm-256color tmux"
# set LANG="en_US.UTF-8"

# Some FZF shell helper
# Ctrl + r - search through bash history with fzf
# Ctrl + p - edit a file in vim from fzf
# mv dir/** - expand a directory with (**) and select from fzf
# Alt + c - change directory from fzf - see the update at the bottom for faster search with bfs.
# Ctrl + t - insert file from fzf into command
test -s ~/.fzf/shell/completion.bash && source ~/.fzf/shell/completion.bash || true
test -s ~/.fzf/shell/key-bindings.bash && source ~/.fzf/shell/key-bindings.bash || true

[ -f ~/.fzf.bash ] && source ~/.fzf.bash
