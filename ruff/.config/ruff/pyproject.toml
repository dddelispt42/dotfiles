[tool.ruff]
line-length = 120
indent-width = 4

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

[tool.ruff.lint]
preview = true
# unsafe-fixes = true

# On top of the defaults (`E`, `F`), enable flake8-bugbear (`B`) and flake8-quotes (`Q`).
select = ["ALL"]
extend-select = [
    "E",
    "F",
    "B",
    "W",
    "C90",
    "I",
    "D",
    "UP",
    "N",
    "YTT",
    "ANN",
    "S",
    "BLE",
    "FBT",
    "A",
    "C4",
    "T10",
    "EM",
    "ICN",
    "T20",
    "RET",
    "SIM",
    "TID",
    "ARG",
    "DTZ",
    "ERA",
    "PD",
    "PGH",
    "PLC",
    "PLE",
    "ASYNC",
    "TRIO",
    "COM",
    "CPY",
    "DJ",
    "EXE",
    "FA",
    "PLR",
    "PLW",
    "RUF",
    "UP",
    "ISC",
    "G",
    "INP",
    "PYI",
]

# Never enforce `E501` (line length violations).
ignore = ["D211", "D213", "TD003", "G004", "FIX002", "COM812", "ISC001"]

# Always autofix, but never try to fix `F401` (unused imports).
# fix = true
# fixable = ["E", "I", "D", "UP", "I001", "SIM"]
fixable = ["ALL"]
unfixable = []
# unfixable = ["F401", "D211"]

# Group violations by containing file.
# format = "grouped"

[tool.ruff.lint.flake8-import-conventions.aliases]
altair = "alt"
"matplotlib.pyplot" = "plt"
numpy = "np"
pandas = "pd"
seaborn = "sns"

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "single"
multiline-quotes = "double"

[tool.ruff.lint.flake8-errmsg]
max-string-length = 20

[tool.ruff.lint.flake8-tidy-imports]
# Disallow all relative imports.
ban-relative-imports = "all"

[tool.ruff.lint.isort]
# combine-as-imports = true
# force-single-line = true
# force-wrap-aliases = true

# [tool.ruff.pyupgrade]
# # Preserve types, even if a file imports `from __future__ import annotations`.
# keep-runtime-typing = true

[tool.ruff.format]
quote-style = "single"
indent-style = "space"
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"
